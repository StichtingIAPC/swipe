# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-12-12 21:58
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import money.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('article', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('labeltype', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(message='Labeltype should be longer than zero characters', regex='^.+$')])),
                ('labelkey', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField()),
                ('book_value_currency', money.models.CurrencyField(max_length=3)),
                ('book_value', money.models.CostField(decimal_places=5, max_digits=28, no_currency_field=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='article.ArticleType')),
            ],
        ),
        migrations.CreateModel(
            name='StockChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('labeltype', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(message='Labeltype should be longer than zero characters', regex='^.+$')])),
                ('labelkey', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField()),
                ('book_value_currency', money.models.CurrencyField(max_length=3)),
                ('book_value', money.models.CostField(decimal_places=5, max_digits=28, no_currency_field=True)),
                ('is_in', models.BooleanField()),
                ('memo', models.CharField(blank=True, max_length=255)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='article.ArticleType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StockChangeSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('memo', models.CharField(max_length=255, null=True)),
                ('source', models.CharField(choices=[('test_do_not_use', 'Test (DO NOT USE)'), ('cash_register', 'Cash register'), ('supplication', 'Supplication'), ('rma', 'RMA'), ('internalise', 'Internalise'), ('externalise', 'Externalise'), ('revaluation', 'Revaluation'), ('stock_count', 'Stock count')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='StockLock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locked', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='StockLockLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locked', models.BooleanField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='stockchange',
            name='change_set',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.StockChangeSet'),
        ),
        migrations.AlterUniqueTogether(
            name='stock',
            unique_together=set([('labeltype', 'labelkey', 'article')]),
        ),
    ]
