# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-05-29 18:22
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='is deleted')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='is deleted')),
                ('name', models.CharField(max_length=255, verbose_name='Customer name')),
                ('email', models.EmailField(max_length=254, verbose_name='Email address')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Address')),
                ('zip_code', models.CharField(blank=True, max_length=255, verbose_name='Zip code')),
                ('city', models.CharField(blank=True, max_length=255, verbose_name='City')),
                ('phone', models.CharField(blank=True, max_length=255, verbose_name='Phone number')),
                ('fax', models.CharField(blank=True, max_length=255, verbose_name='Fax number')),
                ('kvk', models.CharField(blank=True, max_length=8, verbose_name='KvK number')),
                ('memo', models.TextField(blank=True, verbose_name='Memo')),
                ('parent_organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='crm.Organisation', verbose_name='Parent organisation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrganisationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Organisation type name')),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationTypeField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Field name')),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationTypeFieldValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255, verbose_name='Field value')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='crm.Organisation', verbose_name='Organisation')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='crm.OrganisationType', verbose_name='Organisation type')),
                ('typefield', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='crm.OrganisationTypeField', verbose_name='Organisation type field')),
            ],
        ),
        migrations.CreateModel(
            name='PersonType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Person type name')),
            ],
        ),
        migrations.CreateModel(
            name='PersonTypeField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Field name')),
            ],
        ),
        migrations.CreateModel(
            name='PersonTypeFieldValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255, verbose_name='Field value')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='crm.PersonType', verbose_name='Person type')),
                ('typefield', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='crm.PersonTypeField', verbose_name='Person type field')),
            ],
        ),
        migrations.CreateModel(
            name='SwipePermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SwipePermissionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('users', models.ManyToManyField(blank=True, db_index=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContactOrganisation',
            fields=[
                ('customer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='crm.Customer')),
            ],
            options={
                'abstract': False,
            },
            bases=('crm.customer',),
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('customer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='crm.Customer')),
                ('name', models.CharField(max_length=255, verbose_name='Customer name')),
                ('email', models.EmailField(max_length=254, verbose_name='Email address')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Address')),
                ('zip_code', models.CharField(blank=True, max_length=255, verbose_name='Zip code')),
                ('city', models.CharField(blank=True, max_length=255, verbose_name='City')),
                ('phone', models.CharField(blank=True, max_length=255, verbose_name='Phone number')),
                ('memo', models.TextField(blank=True, verbose_name='Memo')),
            ],
            options={
                'abstract': False,
            },
            bases=('crm.customer',),
        ),
        migrations.AddField(
            model_name='swipepermission',
            name='groups',
            field=models.ManyToManyField(blank=True, db_index=True, to='crm.SwipePermissionGroup'),
        ),
        migrations.AddField(
            model_name='persontype',
            name='typefields',
            field=models.ManyToManyField(blank=True, to='crm.PersonTypeField', verbose_name='Person type fields'),
        ),
        migrations.AddField(
            model_name='organisationtype',
            name='typefields',
            field=models.ManyToManyField(blank=True, to='crm.OrganisationTypeField', verbose_name='Organisation type fields'),
        ),
        migrations.AddField(
            model_name='organisation',
            name='types',
            field=models.ManyToManyField(blank=True, to='crm.OrganisationType', verbose_name='Organisation types'),
        ),
        migrations.AddField(
            model_name='persontypefieldvalue',
            name='object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='crm.Person', verbose_name='Person'),
        ),
        migrations.AddField(
            model_name='person',
            name='types',
            field=models.ManyToManyField(blank=True, to='crm.PersonType', verbose_name='Person types'),
        ),
        migrations.AddField(
            model_name='person',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Swipe username'),
        ),
        migrations.AlterUniqueTogether(
            name='organisationtypefieldvalue',
            unique_together=set([('typefield', 'type', 'object')]),
        ),
        migrations.AddField(
            model_name='contactorganisation',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='crm.Person', verbose_name='Person'),
        ),
        migrations.AddField(
            model_name='contactorganisation',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='crm.Organisation', verbose_name='Organisation'),
        ),
        migrations.AlterUniqueTogether(
            name='persontypefieldvalue',
            unique_together=set([('typefield', 'type', 'object')]),
        ),
    ]
