const ERROR = 2;
const WARN = 1;
const OFF = 0;

module.exports = {
	globals: {
		__BACKEND_URL__: true
	},
	env: {
		browser: true,
		es6: true,
		node: true,
	},
	parser: 'babel-eslint',
	parserOptions: {
		ecmaFeatures: {
			experimentalObjectRestSpread: true,
			jsx: true,
			impliedStrict: true,
		},
		sourceType: 'module',
	},
	plugins: [
		'react',
		'babel',
	],
	settings: {
		react: {
			pragma: 'React',
		},
	},
	rules: {
		'no-await-in-loop': WARN,
		'no-compare-neg-zero': WARN,
		'no-cond-assign': ERROR,
		'no-console': OFF,
		'no-constant-condition': WARN,
		'no-control-regex': ERROR,
		'no-debugger': ERROR,
		'no-dupe-args': ERROR,
		'no-dupe-keys': ERROR,
		'no-duplicate-case': ERROR,
		'no-empty': ERROR, // force user to fill in a block statement. Some comment is enough, but at least it forces the programmer to think about what he's doing.
		'no-empty-character-class': ERROR,
		'no-ex-assign': ERROR,
		'no-extra-boolean-cast': WARN,
		'no-extra-parens': [ WARN, "all", {
			nestedBinaryExpressions: false,
			ignoreJSX: 'all',
		}],
		'no-extra-semi': WARN,
		'no-func-assign': ERROR,
		'no-inner-declarations': ERROR,
		'no-invalid-regexp': ERROR,
		'no-irregular-whitespace': [ ERROR, {
			skipStrings: true,
			skipComments: false,
			skipRegExps: true,
			skipTemplates: true,
		}],
		'no-obj-calls': ERROR,
		'no-unreachable': ERROR,
		'no-unsafe-finally': ERROR,
		'no-unsafe-negation': ERROR,
		'use-isnan': ERROR,
		'valid-typeof': ERROR,

		'accessor-pairs': OFF,
		'array-callback-return': ERROR,
		'block-scoped-var': ERROR,
		'class-methods-use-this': [ WARN, {
			exceptMethods: [ 'render', 'trash' ],
		}],
		'complexity': [ ERROR, { 'max': 10 } ],
		'consistent-return': WARN,
		'curly': [ WARN, 'multi-or-nest' ],
		'default-case': WARN,
		'dot-location': [ ERROR, 'property' ],
		'dot-notation': OFF,
		'eqeqeq': [ WARN, 'always' ],
		'guard-for-in': ERROR,
		'no-alert': ERROR,
		'no-caller': ERROR,
		'no-case-declarations': ERROR,
		'no-div-regex': ERROR,
		'no-else-return': WARN,
		'no-empty-function': WARN,
		'no-empty-pattern': ERROR,
		'no-eq-null': WARN,
		'no-eval': ERROR,
		'no-extend-native': WARN,
		'no-extra-bind': WARN,
		'no-extra-label': ERROR,
		'no-fallthrough': WARN,
		'no-floating-decimal': ERROR,
		'no-global-assign': ERROR,
		'no-implicit-coercion': OFF, // !!obj is easier and better optimized than Boolean(something), same for all other options.
		'no-implicit-globals': ERROR,
		'no-implied-eval': ERROR,
		'no-invalid-this': WARN,
		'no-iterator': ERROR,
		'no-labels': ERROR, // was here before I got here, no hard feelings either way
		'no-lone-blocks': ERROR,
		'no-loop-func': WARN,
		'no-magic-numbers': OFF, // might want to be changed, but too convenient
		'no-multi-spaces': WARN,
		'no-multi-str': ERROR,
		'no-new': WARN,
		'no-new-func': ERROR,
		'no-new-wrappers': ERROR,
		'no-octal': WARN,
		'no-octal-escape': ERROR,
		'no-param-reassign': WARN,
		'no-proto': ERROR,
		'no-redeclare': ERROR,
		'no-restricted-properties': OFF, // turn on when we have objects which we do not want direct property access to
		'no-return-assign': ERROR,
		'no-return-await': WARN,
		'no-script-url': ERROR,
		'no-self-assign': ERROR,
		'no-self-compare': ERROR,
		'no-sequences': ERROR,
		'no-throw-literal': WARN,
		'no-unmodified-loop-condition': WARN,
		'no-unused-expressions': WARN,
		'no-unused-labels': WARN,

		'no-useless-call': ERROR,
		'no-useless-concat': ERROR,
		'no-useless-escape': ERROR,
		'no-useless-return': WARN,
		'no-void': ERROR,
		'no-warning-comments': WARN, // Warn on "t|odo", "f|ixme" and "xxx" at the start of comments.
		'no-with': ERROR,
		'prefer-promise-reject-errors': ERROR,
		'radix': [ ERROR, 'always' ],
		'require-await': WARN,
		'vars-on-top': OFF, // too much of an hassle in bigger code blocks
		'wrap-iife': [ ERROR, 'inside' ],
		'yoda': ERROR,

		'init-declarations': WARN,
		'no-catch-shadow': WARN,
		'no-delete-var': ERROR,
		'no-label-var': ERROR,
		'no-shadow': WARN,
		'no-shadow-restricted-names': ERROR,
		'no-undef': ERROR,
		'no-undef-init': ERROR,
		'no-undefined': ERROR,
		'no-use-before-define': ERROR,
		'no-unused-vars': WARN,

		// Callbacks & node-style programming
		'callback-return': WARN,
		'global-require': ERROR, // we don't use require as-is, but require imports on global level
		'handle-callback-err': WARN, // we don't use node-style error handling, but if we do, this warns
		'no-mixed-requires': ERROR, // don't mix requires and normal assignments
		'no-new-require': ERROR, // you may not try this
		'no-path-concat': ERROR, // file systems are different on every computer, let libraries handle path concatenation
		'no-process-env': WARN, // production/development switches may appear only when explicitly allowed.
		'no-process-exit': ERROR, // impossible, but don't use this
		'no-restricted-modules': OFF, // we don't use this
		'no-sync': ERROR, // NOPE

		// Stylistic things
		'array-bracket-spacing': [ WARN, 'always', {
			arraysInArrays: false,
			objectsInArrays: false,
		}],
		'block-spacing': [ ERROR, 'always' ],
		'brace-style': [ ERROR, '1tbs', {
			allowSingleLine: true,
		}],
		'camelcase': OFF,
		'capitalized-comments': OFF,
		'comma-dangle': [ ERROR, {
			arrays: 'always-multiline',
			objects: 'always-multiline',
			imports: 'only-multiline',
			exports: 'only-multiline',
			functions: 'ignore',
		}],
		'comma-spacing': [ ERROR, {
			before: false,
			after: true,
		}],
		'comma-style': [ ERROR, 'last' ],
		'computed-property-spacing': [ ERROR, 'never' ],
		'consistent-this': WARN,
		'eol-last': [ ERROR, 'always' ],
		'func-call-spacing': [ ERROR, 'never' ],
		'func-name-matching': ERROR,
		'func-names': [ WARN, 'as-needed' ],
		'func-declarations': [ OFF, 'declaration', { // This one doesn't work with 'export function something', apparently
			allowArrowFunctions: true,
		}],
		'id-blacklist': OFF,
		'id-length': OFF,
		'id-match': OFF,
		'indent': [ ERROR, 'tab' ],
		'jsx-quotes': [ WARN, 'prefer-double' ],
		'key-spacing': [ ERROR, {
			beforeColon: false,
			afterColon: true,
			mode: 'minimum',
		}],
		'keyword-spacing': [ ERROR, {
			before: true,
			after: true,
		}],
		'line-comment-position': OFF,
		'linebreak-style': OFF,
		'lines-around-comments': OFF,
		'lines-around-directive': [ WARN, {
			before: 'always',
			after: 'always',
		}],
		'max-depth': OFF,
		'max-len': [ WARN, {
			code: 180,
			tabWidth: 2,
			ignoreComments: true,
		}],
		'max-lines': OFF,
		'max-nested-callbacks': [ WARN, 6 ],
		'max-params': [ WARN, {
			max: 5,
		}],
		'max-statements': OFF,
		'max-statements-per-line': [ ERROR, {
			max: 2, // allow 'if (something) { statement }' inlines
		}],
		'multiline-terniary': OFF,
		'new-cap': [ ERROR, {
			newIsCap: true,
			capIsNew: false,
			properties: false,
		}],
		'new-parens': ERROR,
		'newline-after-var': [ WARN, 'always' ],
		'newline-before-return': OFF,
		'newline-per-chained-call': [ ERROR, {
			ignoreChainWithDepth: 2,
		}],
		'no-array-constructor': WARN,
		'no-bitwise': WARN,
		'no-continue': OFF,
		'no-inline-comments': OFF,
		'no-lonely-if': WARN,
		'no-mixed-operators': ERROR,
		'no-mixed-spaces-and-tabs': [ ERROR, 'smart-tabs' ],
		'no-multi-assign': WARN,
		'no-multiple-empty-lines': [ WARN, {
			max: 2,
			maxEOF: 1,
			maxBOF: 0,
		}],
		'no-negated-condition': WARN,
		'no-nested-ternary': WARN,
		'no-new-object': ERROR,
		'no-plusplus': WARN,
		'no-restricted-syntax': OFF,
		'no-tabs': OFF,
		'no-ternary': OFF,
		'no-trailing-spaces': WARN,
		'no-underscore-dangle': OFF,
		'no-unneeded-ternary': WARN,
		'no-whitespace-before-property': ERROR,
		'nonblock-statement-body-position': [ WARN, 'below' ],
		'object-curly-newline': OFF,
		'object-curly-spacing': [ WARN, 'always', {
			arraysInObjects: false,
			objectsInObjects: false,
		}],
		'object-property-newline': WARN,
		'one-var': [ WARN, 'never' ],
		'one-var-declaration-per-line': ERROR,
		'operator-assignment': [ WARN, 'always' ],
		'operator-linebreak': [ WARN, 'after' ],
		'padded-blocks': [ WARN, 'never' ],
		'quote-props': [ WARN, 'consistent-as-needed' ],
		'quotes': [ WARN, 'single', {
			allowTemplateLiterals: true,
		}],
		'require-jsdoc': OFF,
		'semi': [ ERROR, 'always' ],
		'semi-spacing': [ ERROR, {
			before: false,
			after: true,
		}],
		'sort-keys': OFF,
		'sort-vars': OFF,
		'space-before-blocks': [ WARN, 'always' ],
		'space-before-function-paren': [ WARN, {
			anonymous: 'never',
			named: 'never',
			asyncArrow: 'always',
		}],
		'space-in-parens': [ ERROR, 'never' ],
		'space-infix-ops': [ ERROR, {
			int32Hint: false,
		}],
		'space-unary-ops': [ WARN, {
			words: true,
			nonwords: false,
		}],
		'spaced-comment': [ WARN, 'always' ],
		'template-tag-spacing': [ WARN, 'never' ],
		'unicode-bom': [ WARN, 'never' ],
		'wrap-regex': OFF,

		// ES6+ features
		'arrow-body-style': [ WARN, 'as-needed' ],
		'arrow-parens': [ WARN, 'as-needed' ],
		'arrow-spacing': [ ERROR, {
			before: true,
			after: true,
		}],
		'constructor-super': ERROR,
		'generator-star-spacing': [ ERROR, {
			before: false,
			after: true,
		}],
		'no-class-assign': ERROR,
		'no-confusing-arrow': [ WARN, {
			allowParens: true,
		}],
		'no-const-assign': ERROR,
		'no-dupe-class-members': ERROR,
		'no-duplicate-imports': ERROR,
		'no-new-symbol': ERROR,
		'no-restricted-imports': OFF,
		'no-this-before-super': ERROR,
		'no-useless-computed-key': ERROR,
		'no-useless-constructor': ERROR,
		'no-useless-rename': ERROR,
		'no-var': ERROR,
		'object-shorthand': [ WARN, 'properties', {
			avoidQuotes: true,
		}],
		'prefer-arrow-callback': WARN,
		'prefer-const': WARN,
		'prefer-destructuring': [ WARN, {
			object: true,
			array: false,
		}],
		'prefer-numeric-literals': ERROR,
		'prefer-rest-params': WARN,
		'prefer-spread': WARN,
		'prefer-template': WARN,
		'require-yield': WARN,
		'rest-spread-spacing': [ WARN, 'never' ],
		'import-sorting': OFF,
		'symbol-description': ERROR,
		'template-curly-spacing': [ WARN, 'never' ],
		'yield-star-spacing': [ ERROR, 'after' ],

		// React JSX rules
		'react/no-deprecated': WARN,
		'react/no-did-mount-set-state': ERROR,
		'react/no-did-update-set-state': ERROR,
		'react/no-direct-mutation-state': ERROR,
		'react/no-is-mounted': ERROR,
		'react/no-multi-comp': ERROR,
		'react/no-render-return-value': ERROR,
		'react/no-string-refs': WARN,
		'react/react-in-jsx-scope': ERROR,
		'react/require-render-return': WARN,
		'react/self-closing-comp': WARN,
		'react/style-prop-object': ERROR,

		'react/jsx-boolean-value': [ ERROR, 'always' ],
		'react/jsx-closing-bracket-location': [ ERROR, 'after-props' ],
		'react/jsx-first-prop-new-line': [ ERROR, 'multiline' ],
		'react/jsx-indent': [ ERROR, 'tab' ],
		'react/jsx-indent-props': [ ERROR, 'tab' ],
		'react/jsx-key': ERROR,
		'react/jsx-max-props-per-line': [ WARN, { 'maximum': 6 } ],
		'react/jsx-no-duplicate-props': ERROR,
		'react/jsx-no-undef': ERROR,
		'react/jsx-pascal-case': WARN,
		'react/jsx-tag-spacing': [ WARN, {
			'closingSlash': 'never',
			'afterOpening': 'never',
			'beforeSelfClosing': 'always'
		} ],

		// React compatibility
		'react/jsx-uses-react': ERROR,
		'react/jsx-uses-vars':  ERROR,
	},
};
